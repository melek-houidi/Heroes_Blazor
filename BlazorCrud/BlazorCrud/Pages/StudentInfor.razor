@page "/student"
@using BlazorCrud.Data
@inject BlazorCrud.Services.IStudentService StudentService
@inject MudBlazor.ISnackbar Snackbar

    <MudCard Elevation="25">
        <MudCardHeader>
            <MudCardContent>
                <MudText Typo="Typo.h6">Add / Edit Student</MudText>
            </MudCardContent>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField @bind-Value="student.StudentName" Label="Student Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <MudTextField @bind-Value="student.StudentAge" Label="Age" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <MudTextField @bind-Value="student.Address" Label="Address" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <MudTextField @bind-Value="student.ContactNo" Label="Contact Number" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <br />
            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save"> Save Student</MudButton>
        </MudCardContent>
    </MudCard>
    <br />

    <MudTable Elevation="25" Items="GetAllStudents()" Filter="new Func<Student,bool>(Search)" @bind-student="student"></MudTable>
    <MudToolBar>
        <MudText Typo="Typo.h6">Students</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search for Students ..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </MudToolBar>
    <MudCardHeader>
        <MudTh>Id</MudTh>
        <MudTh>Student Name</MudTh>
        <MudTh>Age</MudTh>
        <MudTh>ContactNo</MudTh>
        <MudTh>Actions</MudTh>
    </MudCardHeader>
    <MudTHeadRow>
        <MudTd DataLabel="Id">@student.StudentId</MudTd> 
        <MudTd DataLabel="Student Name">@student.StudentName</MudTd>
        <MudTd DataLabel="Age">@student.StudentAge </MudTd>
        <MudTd DataLabel="Address">@student.Address </MudTd>
        <MudTd DataLabel="ContactNo">@student.ContactNo </MudTd>

        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(student.StudentId))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small"></MudFab>
            <MudFab @onclick="@(()=>Delete(student.StudentId))" Color="Color.Primary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small"></MudFab>
        </MudTd>

    </MudTHeadRow>
    <MudPageContentNavigation>
        <MudTablePager PageSizeOptions="new int[] { 5, 10, 20, 50 }"></MudTablePager>
    </MudPageContentNavigation>
    @code {
        private string searchString = "";
        private Student student = new();
        private List<Student> students = new();


        protected override async Task OnInitializedAsync()
        {
            GetAllStudents();
        }
        private List<Student> GetAllStudents()
        {
            students = StudentService.GetStudents();
            return students;
        }
        private bool Search(Student student)
        {
            if (student.StudentName is not null && student.StudentAge is not null &&
                student.Address is not null && student.ContactNo is not null &&
                student.StudentName.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || student.StudentAge.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || student.Address.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || student.ContactNo.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            {
                return true;
            }
            return false;
        }
        private void Save()
        {
            StudentService.InsertStudent(student);
            Snackbar.Add("Student record saved", Severity.Success);
            GetAllStudents();
        }
        private void Edit(int id)
        {
            student = students.FirstOrDefault(c => c.StudentId == id);
        }
        private void Delete(int id)
        {
            StudentService.DeleteStudent(id);
            Snackbar.Add("Student record deleted", Severity.Success);
            GetAllStudents();
        }

    }
